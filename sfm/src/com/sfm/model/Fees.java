package com.sfm.model;

// Generated Jul 16, 2015 11:21:28 AM by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Fees generated by hbm2java
 */
@Entity
@Table(name = "fees", catalog = "sfm")
public class Fees implements java.io.Serializable {

	private Integer id;
	private User user;
	private BigDecimal totalFees;
	private Integer noOfInstallment;
	private BigDecimal paidFees;
	private BigDecimal pendingFees;
	private BigDecimal additionCharges;
	private Date nextPaymentDueDate;
	private String updateBy;
	private Date updatedOn;

	public Fees() {
	}

	public Fees(User user, Date nextPaymentDueDate, Date updatedOn) {
		this.user = user;
		this.nextPaymentDueDate = nextPaymentDueDate;
		this.updatedOn = updatedOn;
	}

	public Fees(User user, BigDecimal totalFees, Integer noOfInstallment,
			BigDecimal paidFees, BigDecimal pendingFees,
			BigDecimal additionCharges, Date nextPaymentDueDate,
			String updateBy, Date updatedOn) {
		this.user = user;
		this.totalFees = totalFees;
		this.noOfInstallment = noOfInstallment;
		this.paidFees = paidFees;
		this.pendingFees = pendingFees;
		this.additionCharges = additionCharges;
		this.nextPaymentDueDate = nextPaymentDueDate;
		this.updateBy = updateBy;
		this.updatedOn = updatedOn;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "userId", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "totalFees", precision = 11)
	public BigDecimal getTotalFees() {
		return this.totalFees;
	}

	public void setTotalFees(BigDecimal totalFees) {
		this.totalFees = totalFees;
	}

	@Column(name = "noOfInstallment")
	public Integer getNoOfInstallment() {
		return this.noOfInstallment;
	}

	public void setNoOfInstallment(Integer noOfInstallment) {
		this.noOfInstallment = noOfInstallment;
	}

	@Column(name = "paidFees", precision = 11)
	public BigDecimal getPaidFees() {
		return this.paidFees;
	}

	public void setPaidFees(BigDecimal paidFees) {
		this.paidFees = paidFees;
	}

	@Column(name = "pendingFees", precision = 11)
	public BigDecimal getPendingFees() {
		return this.pendingFees;
	}

	public void setPendingFees(BigDecimal pendingFees) {
		this.pendingFees = pendingFees;
	}

	@Column(name = "additionCharges", precision = 11)
	public BigDecimal getAdditionCharges() {
		return this.additionCharges;
	}

	public void setAdditionCharges(BigDecimal additionCharges) {
		this.additionCharges = additionCharges;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "nextPaymentDueDate", nullable = false, length = 19)
	public Date getNextPaymentDueDate() {
		return this.nextPaymentDueDate;
	}

	public void setNextPaymentDueDate(Date nextPaymentDueDate) {
		this.nextPaymentDueDate = nextPaymentDueDate;
	}

	@Column(name = "updateBy", length = 50)
	public String getUpdateBy() {
		return this.updateBy;
	}

	public void setUpdateBy(String updateBy) {
		this.updateBy = updateBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updatedOn", nullable = false, length = 19)
	public Date getUpdatedOn() {
		return this.updatedOn;
	}

	public void setUpdatedOn(Date updatedOn) {
		this.updatedOn = updatedOn;
	}

	@Override
	public String toString() {
		return "Fees [id=" + id + ", user=" + user + ", totalFees=" + totalFees
				+ ", noOfInstallment=" + noOfInstallment + ", paidFees="
				+ paidFees + ", pendingFees=" + pendingFees
				+ ", additionCharges=" + additionCharges
				+ ", nextPaymentDueDate=" + nextPaymentDueDate + ", updateBy="
				+ updateBy + ", updatedOn=" + updatedOn + "]";
	}

	
}
