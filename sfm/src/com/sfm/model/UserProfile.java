package com.sfm.model;

// Generated Jul 16, 2015 11:21:28 AM by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.apache.commons.lang.StringUtils;
import org.codehaus.jackson.annotate.JsonAutoDetect;
import org.codehaus.jackson.annotate.JsonIgnore;
import org.codehaus.jackson.annotate.JsonIgnoreProperties;
import org.codehaus.jackson.annotate.JsonAutoDetect.Visibility;
import org.codehaus.jackson.map.annotate.JsonSerialize;

import com.sfm.util.Utils;

/**
 * Userprofile generated by hbm2java
 */
@Entity
@Table(name = "userprofile", catalog = "sfm")
@JsonAutoDetect(fieldVisibility = Visibility.ANY, getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE)
@JsonIgnoreProperties(ignoreUnknown = true)
@JsonSerialize(include=JsonSerialize.Inclusion.NON_NULL)
public class UserProfile implements java.io.Serializable {

	private Integer id;
	@JsonIgnore
	private User user;
	private int roleId;
	private Boolean gender;
	private String imageUrl;
	private Date dob;
	private String email;
	private String contactno;
	private int stream;
	private String streamName;
	private String percentage;
	private int marksInEnglish;
	private int groupType;
	private Date addmissionDate;
	private Boolean status;
	private String updateBy;
	private Date updatedOn;

	public UserProfile() {
	}

	public UserProfile(User user, int roleId, Date dob, Date addmissionDate,
			Date updatedOn) {
		this.user = user;
		this.roleId = roleId;
		this.dob = dob;
		this.addmissionDate = addmissionDate;
		this.updatedOn = updatedOn;
	}

	public UserProfile(User user, int roleId, Boolean gender, String imageUrl,
			Date dob, String email, String contactno, Date addmissionDate,
			Boolean status, String updateBy, Date updatedOn) {
		this.user = user;
		this.roleId = roleId;
		this.gender = gender;
		this.imageUrl = imageUrl;
		this.dob = dob;
		this.email = email;
		this.contactno = contactno;
		this.addmissionDate = addmissionDate;
		this.status = status;
		this.updateBy = updateBy;
		this.updatedOn = updatedOn;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@OneToOne
	@JoinColumn(name = "userId")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "roleId", nullable = false)
	public int getRoleId() {
		return this.roleId;
	}

	public void setRoleId(int roleId) {
		this.roleId = roleId;
	}

	@Column(name = "gender")
	public Boolean getGender() {
		return this.gender;
	}

	public void setGender(Boolean gender) {
		this.gender = gender;
	}

	@Column(name = "imageURL", length = 100)
	public String getImageUrl() {
		return StringUtils.isEmpty(this.imageUrl)?"/images/noimage.jpg": this.imageUrl;
	}

	public void setImageUrl(String imageUrl) {
		this.imageUrl = imageUrl;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dob", nullable = false, length = 19)
	public Date getDob() {
		return this.dob;
	}

	public void setDob(Date dob) {
		this.dob = dob;
	}

	@Column(name = "email", length = 25)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "contactno", length = 15)
	public String getContactno() {
		return this.contactno;
	}

	public void setContactno(String contactno) {
		this.contactno = contactno;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "addmissionDate", nullable = false, length = 19)
	public Date getAddmissionDate() {
		return this.addmissionDate;
	}

	public void setAddmissionDate(Date addmissionDate) {
		this.addmissionDate = addmissionDate;
	}

	@Column(name = "status")
	public Boolean getStatus() {
		return this.status;
	}

	public void setStatus(Boolean status) {
		this.status = status;
	}

	@Column(name = "updateBy", length = 50)
	public String getUpdateBy() {
		return this.updateBy;
	}

	public void setUpdateBy(String updateBy) {
		this.updateBy = updateBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updatedOn", nullable = false, length = 19)
	public Date getUpdatedOn() {
		return this.updatedOn;
	}

	public void setUpdatedOn(Date updatedOn) {
		this.updatedOn = updatedOn;
	}

	@Column(name = "stream", length = 15)
	public int getStream() {
		return stream;
	}

	public void setStream(int stream) {
		this.stream = stream;
	}
	
	
	@Transient
	public String getStreamName() {
		return Utils.getStreamName(streamName);
	}

	public void setStreamName(String streamName) {
		this.streamName = streamName;
	}

	@Column(name = "percentage", length = 5)
	public String getPercentage() {
		return percentage;
	}

	public void setPercentage(String percentage) {
		this.percentage = percentage;
	}

	@Column(name = "marksInEnglish")
	public int getMarksInEnglish() {
		return marksInEnglish;
	}

	public void setMarksInEnglish(int marksInEnglish) {
		this.marksInEnglish = marksInEnglish;
	}

	@Column(name = "groupType")
	public int getGroupType() {
		return groupType;
	}

	public void setGroupType(int groupType) {
		this.groupType = groupType;
	}
	
	

}
